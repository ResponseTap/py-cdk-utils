name: Test and Release

on:
  push:
    branches:
      - main

jobs:
  Linting:
    name: Linting and Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.x"
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install
      - name: Run black --check .
        run: poetry run black --check .
      - name: Run flake8
        run: poetry run flake8 . --exclude=docs/*

  UnitTests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - name: Clone Repo
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install
      - name: Unit Tests
        run: |
          poetry run pytest src/tests/unit --html=test-results/test-results-unit.html --cov=src/lambda_code --cov-report=html:test-results/test-coverage-unit
      - name: Upload Unit Tests results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-unit
          path: test-results/
#  Release:
#    name: Package and Release
#    runs-on: ubuntu-latest
#    steps:
#      - name: Clone Repo
#        uses: actions/checkout@v2
#      - uses: actions/setup-python@v2
#        with:
#          python-version: "3.8.x"
#      - name: Install dependencies
#        run: |
#          pip install poetry
#          poetry install
